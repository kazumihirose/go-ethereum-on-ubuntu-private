{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Admin Name": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "作成するVMの管理者名"
      }
    },
    "Admin Login Password": {
      "type": "securestring",
      "metadata": {
        "description": "作成するVMの管理者パスワード"
      }
    },
    "VM Size": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4"
      ],
      "metadata": {
        "description": "作成するVMのサイズ"
      }
    },
    "Number of Instances": {
      "type": "int",
      "minValue": 1,
      "maxValue": 10,
      "defaultValue": 1,
      "metadata": {
        "description": "作成するVMのインスタンス数"
      }
    }
  },
  "variables": {
    "AvailabilitySetName": "VMAvailabiritySet",
    "NICNamePrefix": "NIC",
    "StorageAccountName": "[concat('geth', uniqueString(resourceGroup().id))]",
    "SubnetRef": "[concat(variables('VNETID'),'/subnets/',variables('VNETSubnet1Name'))]",
    "VMImageOffer": "UbuntuServer",
    "VMImagePublisher": "Canonical",
    "VMNamePrefix": "geth",
    "VMOSDiskName": "VMOSDisk",
    "VMOSVersion": "14.04.2-LTS",
    "VMStorageAccountContainerName": "vhds",
    "VMSubnetRef": "[concat(variables('VNETID'), '/subnets/', variables('VNETSubnet1Name'))]",
    "VNETID": "[resourceId('Microsoft.Network/virtualNetworks',variables('VNETName'))]",
    "VNETName": "vnet",
    "VNETSubnet1Name": "Subnet1"
  },
  "resources": [
    {
      "name": "[variables('StorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "Storage",
        "group": "[variables('VMNamePrefix')]"
      },
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('AvailabilitySetName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "AvailabilitySet",
        "group": "[variables('VMNamePrefix')]"
      },
      "properties": {
        "platformFaultDomainCount": 3
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('VMNamePrefix'),variables('NICNamePrefix'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "NICLoop",
        "count": "[parameters('Number of Instances')]"
      },
      "tags": {
        "displayName": "[concat(variables('VMNamePrefix'),variables('NICNamePrefix'),copyindex())]",
        "group": "[variables('VMNamePrefix')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfiguration",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('VMNamePrefix'), copyindex())]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('VMNamePrefix'),variables('NICNamePrefix'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('AvailabilitySetName'))]"
      ],
      "copy": {
        "name": "VMLoop",
        "count": "[parameters('Number of Instances')]"
      },
      "tags": {
        "displayName": "[concat(variables('VMNamePrefix'),copyindex())]",
        "group": "[variables('VMNamePrefix')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('AvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VM Size')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('VMNamePrefix'), copyindex())]",
          "adminUsername": "[parameters('Admin Name')]",
          "adminPassword": "[parameters('Admin Login Password')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('VMImagePublisher')]",
            "offer": "[variables('VMImageOffer')]",
            "sku": "[variables('VMOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "VMOSDisk",
            "vhd": {
              "uri": "[concat('http://', variables('StorageAccountName'), '.blob.core.windows.net/', variables('VMStorageAccountContainerName'), '/', variables('VMOSDiskName'), copyindex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('VMNamePrefix'),variables('NICNamePrefix'), copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('VMNamePrefix'), copyindex(),'/install')]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "VMExtentionLoop",
        "count": "[parameters('Number of Instances')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(variables('VMNamePrefix'), copyindex()))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/kazumihirose/go-ethereum-on-ubuntu-private/master/go-ethereum-on-ubuntu/UploadBlobs/configure-geth-1stnode.sh"
          ],
          "commandToExecute": "[concat('sh configure-geth.sh ', parameters('Admin Name'))]"
        }
      }
    }
  ],
  "outputs": {
  }
}